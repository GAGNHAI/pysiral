# Level 2 processor settings are mission specific
mission:
    id: cryosat2
    
# Regions Settings (for file selection and potential subsetting
roi:
    pyclass: LowerLatLimit
    hemisphere: north
    options:
        latitude_threshold: 50.0

# Settings of Level-2 orbit processing
level2:

    # Sources of ancillary datasets
    # (the tag "name" links to the corresponding tag in config/auxdata.yaml)
    auxdata:
        
        mss:
            name: dtu15
            options: null
        sic:
            name: osisaf
            options: null
        sitype:
            name: osisaf
            options: null
        snow: 
            name: warren99
            options: 
                fyi_correction_factor: 0.5
                smooth_snow_depth: true
                smooth_filter_width_m: 25000.0
                valid_snow_depth_range: [0, 0.6]
                invalid_replace: nan
   
    # geophysical corrections applied to the l1b range window
    corrections: 
        - dry_troposphere
        - wet_troposphere
        - inverse_barometric
        - ionospheric
        - ocean_tide_elastic
        - ocean_tide_long_period
        - ocean_loading_tide
        - solid_earth_tide
        - geocentric_polar_tide
        
    # Surface type classification algorithm
    surface_type: 
        pyclass: RickerTC2014
        options: 
            ocean:
                peakiness_min: 0.0
                peakiness_max: 10.0
                stack_standard_deviation_min: 18.5
                ice_concentration_min: 5.0
                ocog_width_min: 38
            lead: 
                peakiness_l_min: 40.0
                peakiness_r_min: 30.0
                peakiness_min: 40.0
                stack_kurtosis_min: 40.0
                stack_standard_deviation_max: 4.0
                ice_concentration_min: 70.0
            sea_ice: 
                peakiness_r_max: 15.0
                peakiness_l_max: 20.0
                peakiness_max: 30.0
                stack_kurtosis_max: 8.0
                ice_concentration_min: 70.0
                
    # Retracking algorithm dependent on surface type
    retracker: 
        ocean: 
            pyclass: TFMRA
            options: 
                threshold: 0.5
                offset: 0.0
                wfm_oversampling_factor: 10
                wfm_oversampling_method: linear
                wfm_smoothing_window_size: 11
                first_maximum_normalized_threshold: 0.15
                first_maximum_local_order: 1
        lead: 
            pyclass: TFMRA
            options: 
                threshold: 0.5
                offset: 0.0
                wfm_oversampling_factor: 10
                wfm_oversampling_method: linear
                wfm_smoothing_window_size: 11
                first_maximum_normalized_threshold: 0.15
                first_maximum_local_order: 1
        sea_ice: 
            pyclass: TFMRA
            options: 
                threshold: 0.5
                offset: 0.0
                wfm_oversampling_factor: 10
                wfm_oversampling_method: linear
                wfm_smoothing_window_size: 11
                first_maximum_normalized_threshold: 0.15
                first_maximum_local_order: 1
                
    # Algorithm for instantaneos sea surface height (mss + ssa) and radar freeboard 
    ssa: 
        pyclass: SSASmoothedLinear
        options: 
            use_ocean_wfm: False
            smooth_filter_width_m: 25000.0
            smooth_filter_width_footprint_size: 300.0
            pre_filtering: true
            pre_filter_maximum_mss_median_offset: 1.0 # in meter            
            
    # Algorithm for converting radar freeboard into freeboard
    frb: 
        pyclass: SnowGeometricCorrection
        options: 
            vacuum_light_speed_reduction: 0.22
            
    # Algorithm for getting sea ice thickness from other l2 parameters
    sit: 
        pyclass: SeaIceFreeboardDefault
        options: 
            water_density: 1024.0
            fyi_density: 916.7
            myi_density: 882.0
            
    # List of filter at different stages of l2 procesing 
    # (can be list of filters)
    filter: 
    
        # Filters after freeboard computation
        freeboard: 
            frb_valid_range: 
                pyclass: L2ParameterValidRange
                options: 
                    valid_minimum_point_value: -0.25
                    valid_maximum_point_value: 2.25
                    
        # Filters after thickness computation
        thickness: 
            frb_valid_range: 
                pyclass: L2ParameterValidRange
                options: 
                    valid_minimum_point_value: -0.5
                    valid_maximum_point_value: 10.5
                    
    # Tests if l1b orbit file is valid
    validator: 
    
        # Tests (Can be several) after surface type classification
        surface_type: 
            n_leads: 
                pyclass: LeadFixedMinimumNumber
                options: 
                    minimum_n_leads: 3
            
    # Post-Processing (tbd if needed)            
    post_processing: null
    
    # Definition of output files of the l2 orbit datasets
    # (can be several if needed)
    output: 
        l2i: 
            pyclass: L2iDataNC
            path: null
            options: 
                subfolders: 
                    - year 
                    - month
                parameter: 
                    - timestamp
                    - longitude
                    - latitude
                    - surface_type
                    - elevation
                    - mean_sea_surface
                    - sea_surface_anomaly
                    - radar_freeboard
                    - freeboard
                    - sea_ice_type
                    - sea_ice_concentration
                    - snow_depth
                    - snow_density
                    - ice_density
                    - sea_ice_thickness
                    