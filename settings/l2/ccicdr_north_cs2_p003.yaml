# Based on sicci2sit_protoC01_cryosat2_north.yaml and added with uncertainty tags and updated ssa smoothing

# Level 2 processor settings are mission specific
mission:
    id: cryosat2
    
# Regions Settings (for file selection and potential subsetting
roi:
    pyclass: LowerLatLimit
    hemisphere: north
    options:
        latitude_threshold: 50.0

# Settings of Level-2 orbit processing
level2:

    # Sources of ancillary datasets
    # (the tag "name" links to the corresponding tag in config/auxdata.yaml)
    auxdata:
        
        mss:
            name: dtu15
            options: null
        sic:
            name: osisaf409
            options: null
        sitype:
            name: icdc_nasateam
            options: null
        snow: 
            name: warren99
            options: 
                fyi_correction_factor: 0.5
                smooth_snow_depth: true
                smooth_filter_width_m: 25000.0
                valid_snow_depth_range: [0, 0.6]
                invalid_replace: .0
   
    # geophysical corrections applied to the l1b range window
    corrections: 
        - dry_troposphere
        - wet_troposphere
        - inverse_barometric
        - ionospheric
        - ocean_tide_elastic
        - ocean_tide_long_period
        - ocean_loading_tide
        - solid_earth_tide
        - geocentric_polar_tide
        
    # Surface type classification algorithm
    surface_type: 
        pyclass: SICCI2Cryosat2
        options: 
            sar:
                ocean:
                    peakiness_max: 5.0
                    ice_concentration_min: 5.0
                lead:
                    peakiness_min: [66.2, 65.4, 66.0, .0, .0, .0, .0, .0, .0, 71.2, 69.2, 65.8]
                    sea_ice_backscatter_min: [22.1, 21.8, 21.6, .0, .0, .0, .0, .0, .0, 25.1, 23.4, 22.2]
                    leading_edge_width_max: [0.78, 0.79, 0.79, .0, .0, .0, .0, .0, .0, 0.74, 0.76, 0.78]
                    ice_concentration_min: 70.0
                sea_ice:
                    peakiness_max: [27.2, 26.2, 25.7, .0, .0, .0, .0, .0, .0, 27.8, 27.7, 26.7]
                    sea_ice_backscatter_min: 2.5
                    sea_ice_backscatter_max: [18.7, 18.1, 17.8, .0, .0, .0, .0, .0, .0, 20.4, 19, 18.2]
                    leading_edge_width_min: [1.13, 1.18, 1.19, .0, .0, .0, .0, .0, .0, 1.13, 1.1, 1.13]
                    ice_concentration_min: 70.0
            sin:
                ocean:
                    peakiness_max: 5.0
                    ice_concentration_min: 5.0
                lead:
                    peakiness_min: [273.0, 272.7, 268.8, .0, .0, .0, .0, .0, .0, 292.6, 289.1, 277.2]
                    sea_ice_backscatter_min: [26.0, 26.4, 25.7, .0, .0, .0, .0, .0, .0, 29.1, 27.6, 26.5]
                    leading_edge_width_max: [1.07, 1.07, 1.08, .0, .0, .0, .0, .0, .0, 1.02, 1.03, 1.06]
                    ice_concentration_min: 70.0
                sea_ice:    
                    peakiness_max: [104.6, 102.1, 97.7, .0, .0, .0, .0, .0, .0, 113.6, 115.4, 107.8]
                    sea_ice_backscatter_min: 2.5
                    sea_ice_backscatter_max: [22.3, 21.9, 21.3, .0, .0, .0, .0, .0, .0, 24.3, 24, 22.7]
                    leading_edge_width_min: [1.50, 1.52, 1.56, .0, .0, .0, .0, .0, .0, 1.45, 1.43, 1.47]
                    ice_concentration_min: 70.0

    # Mission specific range uncertainties
    uncertainty:
        # These values come from cs2awi (for cryosat2)
        range:
            sigma: [0.14, 0.10, 0.14]
            speckle_noise: 0.2

    # Retracking algorithm dependent on surface type
    retracker: 
        ocean: 
            pyclass: NoneRetracker
            options: null
        lead: 
            pyclass: cTFMRA
            options:
                # if arrays than [lrm, sar, sin]    
                threshold: 0.5
                offset: 0.0
                wfm_oversampling_factor: 10
                wfm_oversampling_method: linear
                wfm_smoothing_window_size: [11, 11, 21] 
                first_maximum_normalized_threshold: [0.15, 0.15, 0.45] 
                first_maximum_local_order: 1
                range_bias: [-0.022, 0.047, 0.017]                
        sea_ice: 
            pyclass: cTFMRA
            options: 
                # if arrays than [lrm, sar, sin]   
                threshold: 0.5
                offset: 0.0
                wfm_oversampling_factor: 10
                wfm_oversampling_method: linear
                wfm_smoothing_window_size: [11, 11, 21] 
                first_maximum_normalized_threshold: [0.15, 0.15, 0.45] 
                first_maximum_local_order: 1
                range_bias: [-0.022, 0.047, 0.017]
                
    # Algorithm for instantaneos sea surface height (mss + ssa) and radar freeboard 
    ssa: 
        pyclass: SSASmoothedLinear
        options: 
            use_ocean_wfm: False
            smooth_filter_width_m: 100000.0
            smooth_filter_width_footprint_size: 300.0
            pre_filtering: true       
            pre_filter_maximum_mss_median_offset: 5.0 # in meter
            uncertainty_tiepoints_distance_max: 100000.
            uncertainty_minimum: 0.1
            uncertainty_maximum: 0.5

    # Estimation of Radar Freeboard
    afrb:
        pyclass: RadarFreeboardDefault
        options: null

    # Algorithm for converting radar freeboard into freeboard
    frb: 
        pyclass: SnowGeometricCorrection
        options: 
            vacuum_light_speed_reduction: 0.22
            
    # Algorithm for getting sea ice thickness from other l2 parameters
    sit: 
        pyclass: SeaIceFreeboardDefault
        options: 
            water_density: 1024.0
            fyi_density: 916.7
            myi_density: 882.0
            
    # List of filter at different stages of l2 procesing 
    # (can be list of filters)
    filter: 
    
        # Filters after freeboard computation
        freeboard: 
            frb_valid_range: 
                pyclass: L2ParameterValidRange
                options: 
                    valid_minimum_point_value: -0.25
                    valid_maximum_point_value: 2.25
                    
        # Filters after thickness computation
        thickness: 
            frb_valid_range: 
                pyclass: L2ParameterValidRange
                options: 
                    valid_minimum_point_value: -0.5
                    valid_maximum_point_value: 10.5
                    
    # Tests if l1b orbit file is valid
    validator: 
    
        # Tests (Can be several) after surface type classification
        surface_type: 
            n_leads: 
                pyclass: LeadFixedMinimumNumber
                options: 
                    minimum_n_leads: 3
            
    # Post-Processing (tbd if needed)            
    post_processing: null
    
    # Definition of output files of the l2 orbit datasets
    # (can be several if needed)
    output: 
        l2i: 
            pyclass: L2iDataNC
            path: null
            options: 
                subfolders: 
                    - year 
                    - month
                parameter: 
                    - timestamp
                    - longitude
                    - latitude
                    - surface_type
                    - elevation
                    - mean_sea_surface
                    - sea_surface_anomaly
                    - radar_freeboard
                    - freeboard
                    - sea_ice_type
                    - sea_ice_concentration
                    - snow_depth
                    - snow_density
                    - ice_density
                    - sea_ice_thickness
                    