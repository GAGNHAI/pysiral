# Level 2 processor settings are mission specific
mission:
    id: envisat

# Regions Settings (for file selection and potential subsetting
roi:
    pyclass: LowerLatLimit
    hemisphere: north
    options:
        latitude_threshold: 50.0

# Settings of Level-2 orbit processing
level2:

    # Sources of ancillary datasets
    # (the tag "name" links to the corresponding tag in config/auxdata.yaml)
    auxdata:

        mss:
            name: dtu15
            options: null
        sic:
            name: osisaf409
            options: null
        sitype:
            name: icdc_nasateam
            options: null
        snow:
            name: warren99
            options:
                fyi_correction_factor: 0.5
                smooth_snow_depth: true
                smooth_filter_width_m: 25000.0
                valid_snow_depth_range: [0, 0.6]
                invalid_replace: nan

    # geophysical corrections applied to the l1b range window
    corrections:
        - dry_troposphere
        - wet_troposphere
        - inverse_barometric
        - ionospheric
        - ocean_tide_elastic
        - ocean_tide_long_period
        - ocean_loading_tide
        - solid_earth_tide
        - geocentric_polar_tide

    # Surface type classification algorithm
    surface_type:
        pyclass: SICCI2Envisat
        options:
            ocean:
                peakiness_max: 5.0
                ice_concentration_min: 5.0
            lead:
                peakiness_min: [46.90, 46.40, 46.20, 48.40, 0.00, 0.00, 0.00, 0.00, 0.00, 52.90, 51.00, 47.70]
                sea_ice_backscatter_min: [28.80, 28.60, 28.50, 28.40, 0.00, 0.00, 0.00, 0.00, 0.00, 32.80, 30.80, 29.30]
                leading_edge_width_max: [0.82, 0.82, 0.82, 0.82, 0.00, 0.00, 0.00, 0.00, 0.00, 0.82, 0.82, 0.82]
                ice_concentration_min: 70.0
            sea_ice:
                peakiness_max: [16.00, 14.80, 14.10, 14.20, 0.00, 0.00, 0.00, 0.00, 0.00, 19.40, 19.30, 16.90]
                sea_ice_backscatter_min: 2.5
                sea_ice_backscatter_max: [22.50, 21.80, 21.30, 20.40, 0.00, 0.00, 0.00, 0.00, 0.00, 25.90, 24.60, 22.80]
                leading_edge_width_min: [0.81, 0.83, 0.83, 0.83, 0.00, 0.00, 0.00, 0.00, 0.00, 0.78, 0.78, 0.80]
                ice_concentration_min: 70.0

    # Retracking algorithm dependent on surface type
    retracker:
        ocean:
            pyclass: NoneRetracker
            options: null

        lead:
            pyclass: SICCI2TfmraEnvisat
            options:
                # if arrays than [lrm, sar, sin]
                offset: 0.0
                # type can be fixed, sigma_func and sitype_sigma_func
                threshold:
                    type: fixed
                    value: 0.95
                wfm_oversampling_factor: 10
                wfm_oversampling_method: linear
                wfm_smoothing_window_size: [11, 11, 21]
                first_maximum_normalized_threshold: [0.15, 0.15, 0.45]
                first_maximum_local_order: 1
                uncertainty:
                    type: fixed
                    value: 0.1
        sea_ice:
            pyclass: SICCI2TfmraEnvisat
            options:
                # if arrays than [lrm, sar, sin]
                # type can be fixed, sigma_func and sitype_sigma_func
                threshold:
                    type: sitype_sigma_func
                    sigma_scaling: 0.84
                    coef_fyi: [0.2226346193, 0.0116119105, 0.0003187522]
                    coef_myi: [2.410715e-01, 4.881797e-03, 1.381001e-04, 1.980877e-05]
                offset: 0.0
                wfm_oversampling_factor: 10
                wfm_oversampling_method: linear
                wfm_smoothing_window_size: [11, 11, 21]
                first_maximum_normalized_threshold: [0.15, 0.15, 0.45]
                first_maximum_local_order: 1
                uncertainty:
                    type: fixed
                    value: 0.1

    # Algorithm for instantaneos sea surface height (mss + ssa) and radar freeboard
    ssa:
        pyclass: SSASmoothedLinear
        options:
            use_ocean_wfm: False
            smooth_filter_width_m: 200000.0
            smooth_filter_width_footprint_size: 300.0
            pre_filtering: true
            pre_filter_maximum_mss_median_offset: 5.0 # in meter
            uncertainty_tiepoints_distance_max: 100000.
            uncertainty_minimum: 0.02
            uncertainty_maximum: 0.10

    # Estimation of Radar Freeboard
    afrb:
        pyclass: RadarFreeboardDefault
        options: null

    # Algorithm for converting radar freeboard into freeboard
    frb:
        pyclass: SnowGeometricCorrection
        options:
            vacuum_light_speed_reduction: 0.22

    # Algorithm for getting sea ice thickness from other l2 parameters
    sit:
        pyclass: SeaIceFreeboardDefault
        options:
            water_density: 1024.0
            fyi_density: 916.7
            myi_density: 882.0
            uncertainty:
                fyi_density: 10.0
                myi_density: 10.0

    # List of filter at different stages of l2 procesing
    # (can be list of filters)
    filter:

        # Filters after freeboard computation
        freeboard:
            frb_valid_range:
                pyclass: L2ParameterValidRange
                options:
                    valid_minimum_point_value: -0.5
                    valid_maximum_point_value: 2.5

        # Filters after thickness computation
        thickness:
            frb_valid_range:
                pyclass: L2ParameterValidRange
                options:
                    valid_minimum_point_value: -1.0
                    valid_maximum_point_value: 10.5

    # Tests if l1b orbit file is valid
    validator:

        # Tests (Can be several) after surface type classification
        surface_type:
            n_leads:
                pyclass: LeadFixedMinimumNumber
                options:
                    minimum_n_leads: 3

    # Post-Processing (tbd if needed)
    post_processing: null

    # Definition of output files of the l2 orbit datasets
    # (can be several if needed)
    output:
        l2i:
            pyclass: L2iDataNC
            path: null
            options:
                subfolders:
                    - year
                    - month
                parameter:
                    - timestamp
                    - longitude
                    - latitude
                    - surface_type
                    - elevation
                    - elevation_uncertainty
                    - mean_sea_surface
                    - sea_surface_anomaly
                    - sea_surface_anomaly_uncertainty
                    - radar_freeboard
                    - radar_freeboard_uncertainty
                    - freeboard
                    - freeboard_uncertainty
                    - sea_ice_type
                    - sea_ice_type_uncertainty
                    - sea_ice_concentration
                    - snow_depth
                    - snow_depth_uncertainty
                    - snow_density
                    - snow_density_uncertainty
                    - ice_density
                    - ice_density_uncertainty
                    - sea_ice_thickness
                    - sea_ice_thickness_uncertainty
